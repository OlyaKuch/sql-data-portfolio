-- Calculating the number of unique accounts by date, country, and account attributes

WITH account_metrics AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   COUNT(DISTINCT a.id) AS account_cnt
 FROM `data-analytics-mate.DA.account` AS a
 JOIN `data-analytics-mate.DA.account_session` AS acs
   ON a.id = acs.account_id
 JOIN `data-analytics-mate.DA.session` AS s
   ON acs.ga_session_id = s.ga_session_id
 JOIN `data-analytics-mate.DA.session_params` AS sp
   ON acs.ga_session_id = sp.ga_session_id
 GROUP BY date, country, send_interval, is_verified, is_unsubscribed
),


-- Calculating the number of sent, opened, and visited email messages by user attributes

email_metrics AS (
 SELECT
   DATE_ADD(s.date, INTERVAL es.sent_date DAY) AS sent_date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   COUNT(DISTINCT es.id_message) AS sent_msg,
   COUNT(DISTINCT eo.id_message) AS open_msg,
   COUNT(DISTINCT ev.id_message) AS visit_msg
 FROM `data-analytics-mate.DA.email_sent` es
 JOIN `data-analytics-mate.DA.account_session` acs
   ON es.id_account = acs.account_id
 JOIN `data-analytics-mate.DA.account` AS a
   ON acs.account_id = a.id
 JOIN `data-analytics-mate.DA.session_params` AS sp
   ON acs.ga_session_id = sp.ga_session_id
 JOIN `data-analytics-mate.DA.session` s
   ON acs.ga_session_id = s.ga_session_id
 LEFT JOIN `data-analytics-mate.DA.email_open` eo
   ON es.id_message = eo.id_message
 LEFT JOIN `data-analytics-mate.DA.email_visit` ev
   ON es.id_message = ev.id_message
 GROUP BY DATE_ADD(s.date, INTERVAL es.sent_date DAY), country, send_interval, is_verified, is_unsubscribed
),


-- Combining account and email metrics into a unified dataset

final AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   account_cnt,
   0 AS sent_msg,
   0 AS open_msg,
   0 AS visit_msg
 FROM account_metrics
 UNION ALL
 SELECT
   sent_date AS date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   0 AS account_cnt,
   sent_msg,
   open_msg,
   visit_msg
 FROM email_metrics
),


-- Aggregating all metrics by date, country, and account attributes

count_final AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   SUM(account_cnt) AS account_cnt,
   SUM(sent_msg) AS sent_msg,
   SUM(open_msg) AS open_msg,
   SUM(visit_msg) AS visit_msg
 FROM final
 GROUP BY date, country, send_interval, is_verified, is_unsubscribed
),


-- Calculating total metrics per country using window functions

count_country AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   account_cnt,
   sent_msg,
   open_msg,
   visit_msg,
   SUM(account_cnt) OVER (PARTITION BY country) AS total_country_account_cnt,
   SUM(sent_msg) OVER (PARTITION BY country) AS total_country_sent_cnt
 FROM count_final
),


-- Ranking countries based on total number of accounts and sent messages

rank_count AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   account_cnt,
   sent_msg,
   open_msg,
   visit_msg,
   total_country_account_cnt,
   total_country_sent_cnt,
   DENSE_RANK() OVER (ORDER BY total_country_account_cnt DESC) AS rank_total_country_account_cnt,
   DENSE_RANK() OVER (ORDER BY total_country_sent_cnt DESC) AS rank_total_country_sent_cnt
 FROM count_country
)


-- Selecting the top 10 countries based on account count or messages sent

SELECT
 date,
 country,
 send_interval,
 is_verified,
 is_unsubscribed,
 account_cnt,
 sent_msg,
 open_msg,
 visit_msg,
 total_country_account_cnt,
 total_country_sent_cnt,
 rank_total_country_account_cnt,
 rank_total_country_sent_cnt
FROM rank_count
WHERE rank_total_country_account_cnt <= 10 OR rank_total_country_sent_cnt <= 10;


